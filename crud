AQUI VAMOS INICIAR O PROJETO 
DEVEMOS TER UM BANCO DE DADOS, E O UTILIZADO É O MYSQL
DEPOIS DE INTALADO, VAMOS CRIAR UMA PASTA DE USUÁRIO.
1-PASTA DE USUARIO
2- PODEMOS CRIAR UTILIZANDO AS OPÇÕES OU CRIAR NA MÃO DIGITANDO O CODIGO!
2.1 - 
  CREATE TABLE 'crud', 'USUARIOS'( 
  'id' INT NOT NULL AUTO_INCREMENT,
  'nome' VARCHAR(255) NOT NULL,
  'email' VARCHAR(255) NOT NULL,
  'fone' VARCHAR(45) NOT NULL,
  'date_nascimento' DATE NOT NULL,
PRIMARY KEY ('id'));                           ESSE SERIA O CÓDIGO DIGITADO NA MÃO PARA CRIAR UM BANCO DE DADO USUÁRIO.

apply e está criado o banco !!!!!

3- vamos adicionar manuamente as infomações dalan, darlan@test, 2000/01/01, 991953022  
aply novamente para adc as informações
caso fosse manual:

INSERT INTO 'crud', 'usuarios' ('id', 'nome', 'email', 'fone', 'data_nascimento') 
aply ...
 para !!!!!!!!  (trabalhar localmente precisa configurar) !!!!!!!!!!! para nao dar nenhum erro ..

------>>>>>>>>>    ALTER USER 'root'@'localhost' IDENTIFIED WITF mysql_native_password BY 'willdev123';
clica no raio para executar 
________________________________________________________________________________________________________________________________________________________________
no vscode dentro da pasta crud vou criar 2 pasta - API e FRONTEND -> que vai ser o back e front....
4-no terminal da pasta front vou dar um (cd api) 
criar o projeto node com (node init -y)  OU NPM QUE É UMA "PLAY STORE DE CODIGOS" no terminal dentro do arquivo javascript vou dar um (npm init -y) assim que inicia um ´projeto NODE!!!!
vai criar o arquivo package.json - ok

________________________________________________________________________________________________________________________________________________________________

instalar as biblioteca (yarn add express nodemon mysql cors)
express - construção da api  -  com NPM VAMOS USAR ( npm add express) vai criar a node_modules com packlock.json  ok
no meu arquivo javascript vou importar o express -> no terminal vou dar um (node arquivocriado.js ) vai dar error, pois no pack.json tenho que criar ("type" = "module")

vou criar uma variavel com nome app = express();
tenho que usar essa variavel com a função ouvir = listen  ->>>>>  app.listen(3000) e colocar uma porta dentro. vamos usar a 3 mil por exemplo!!!!!!

no terminal vou dar um (node server.js) e abrir no navegador o lacalhost:+NÚMERO DA PORTA COLOCADO NO BACKEND ->>>  LOCALHOST:3000 VAI SER DIRECIONADO PARA NOSSO COPDIGO LOCALMENTE.

Fazendo a primeira rota --->>>>
app.get('/usuarios', (abacate, mamao) =>{  aqui normalmnte será chamdo de: (request, response)
    mamao.send("olá, rota acessada com sucesso")
    res.send("olá, rota acessada com sucesso!")
}) - get lista usuarios

lá no namvegdor vou acessar pelo ---->>>>>>  (localhost:3000/usuarios)
TEM QUE VOLTAR COM A MESNAGEM NA TELA OLÁ, ROTA ACESSADA COM SUCESSO!  "!!!!!!!!!!!!!!!!!!!!!!!!!
________________________________________________________________________________________________________________________________________________________________
 preciso criar minha rota post .. que é a mesma coisa do get só que nao consigo visualizar ele!!

________________________________________________________________________________________________________________________________________________________________
nodemon - cada vez que salvar nao precisar parar o projeto e startar novamento 
mysql - nosso banco de dados
cors - nenhum conflito por está localmente.
enter já vai criar tudo ....

________________________________________________________________________________________________________________________________________________________________

5- no packge.json - vou apagar  o comando do script e trocar por ("start": "nodemon index.js")
5.1 - na pasta com nome api, vamos criar um novo arquivo com o mesmo nome (index.js)

________________________________________________________________________________________________________________________________________________________________

6- no arquivo packge.json, vamos adicionar abaixo da main -> ("type": "module",) para exportação do código

________________________________________________________________________________________________________________________________________________________________

7- no index.js vou exportar:

import express from "express"
import cors from "cors"

const app = express()

app.use(express.jason())
app.use(cors())

app.listen(8800)

________________________________________________________________________________________________________________________________________________________________

8- consfiguração do banco

import mysql from "mysql"

expot const db = mysql.createConnection({
host: "localhost",
user: "root",
password: "darlan123",
database: "crud",
});


________________________________________________________________________________________________________________________________________________________________

9- dentro da pasta api -> criar pasta -> routes -> dentro de routes criar arquivo users.js, cria outro tbm com nome controllers

dentro da routes.js/ users.js:
export express from "express";
import { getUsers} from "../controllers/user.js";

const router = express.Router();

router.get("/", getUsers)

export default router

________________________________________________________________________________________________________________________________________________________________

9.2- dentro de controller/user.js
import {db} from "../db.js";

export const getUsers = (_, res) => {
const q = "SELECT * FROM usuarios";

db.query(q, (err, data) => {
if(err) return res.json(err);

return res.status(200).json(data);
});
};

________________________________________________________________________________________________________________________________________________________________

10- lá no index.js vou criar um :
app.use("/", userRoutes)

vou chamar com import userRoutes from "./routes/users.js"

vou rdar o projeto com yarn no terminal ....

(yarn start)
para ver o resultado vou na barra do navegadro e digitar localhost.8800 que foi a porta que indicamos, tem que aparece as infomações do banco de dados na tela .....
